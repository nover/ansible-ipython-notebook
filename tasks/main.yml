---
  - name: ipython-notebook | main.yml >> latest openssl present
    apt: pkg=openssl state=latest
    # environment: env.proxies
    tags: ipython-notebook

  - name: ipython-notebook | main.yml >> ipython profile(s) present
    file: path=/home/{{ item.user }}/.jupyter/ state=directory
    # sudo_user: {{ item.user }} <-- next update of ansible
    sudo: False
    with_items: ipython_notebook.notebooks
    when: ipython_notebook.notebooks is defined
    tags: ipython-notebook

  - name: ipython-notebook | main.yml >> ensure certfile directory exists
    file: path={{ item.config.certfile_dir }} state=directory mode=0755 owner={{ item.user }} group={{ item.group }}
    with_items: ipython_notebook.notebooks
    when: ipython_notebook.notebooks is defined
    tags: ipython-notebook

  - name: ipython-notebook | main.yml >> ipython-notebook cert created
    command: openssl req -x509 -nodes -days 3650 -newkey rsa:1024 -subj {{ item.config.certfile_subject }} -keyout {{ item.config.certfile_dir }}/{{ item.user }}_notebook_server.pem -out {{ item.config.certfile_dir }}/{{ item.user }}_notebook_server.pem creates={{ item.config.certfile_dir }}/{{ item.user }}_notebook_server.pem
    with_items: ipython_notebook.notebooks
    when: ipython_notebook.notebooks is defined
    tags: ipython-notebook

  - name: ipython-notebook | main.yml >> ensure cert permissions
    file: path={{ item.config.certfile_dir }}/{{ item.user }}_notebook_server.pem state=file mode=0600 owner={{ item.user }} group={{ item.group }}
    with_items: ipython_notebook.notebooks
    when: ipython_notebook.notebooks is defined
    tags: ipython-notebook

  - name: ipython-notebook | main.yml >> ensure notebook directory exists
    file: path={{ item.config.notebook_dir }} state=directory mode=0755 owner={{ item.user }} group={{ item.group }}
    with_items: ipython_notebook.notebooks
    when: ipython_notebook.notebooks is defined
    tags: ipython-notebook

  - name: ipython-notebook | main.yml >> ipython password set
    command: python3 -c 'from notebook.auth import passwd; print (passwd("{{ ipython_notebook.default_notebook_password }}"))'
    register: ipython_notebook_sha1_password
    tags: ipython-notebook

  - name: ipython-notebook | main.yml >> ipython conf present
    template: src=ipython_notebook_config.py.j2 dest=/home/{{ item.user }}/.jupyter/jupyter_notebook_config.py mode=0644 owner={{ item.user }} group={{ item.group }}
    sudo: False
    with_items: ipython_notebook.notebooks
    tags: ipython-notebook